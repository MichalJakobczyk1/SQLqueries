--22.01a
--funkcja
CREATE OR ALTER FUNCTION studmod_f(@module VarChar(100))
RETURNS TABLE AS RETURN
SELECT surname, first_name
FROM students
WHERE student_id IN
(SELECT student_id
FROM students_modules
WHERE module_id IN
(SELECT module_id
FROM modules
WHERE module_name = @module))

--tworzenie session context
EXEC sp_set_session_context @key = N'module',@value = 'Mathematics'
SELECT *
FROM studmod_v

--widok
CREATE OR ALTER VIEW studmod_v AS
SELECT surname, first_name
FROM students
WHERE student_id IN
(SELECT student_id
FROM students_modules
WHERE module_id IN
(SELECT module_id
FROM modules
WHERE module_name = SESSION_CONTEXT(N'module')))

--22.01b
SELECT *
FROM studmod_f('Mathematics')
ORDER BY surname
SELECT *
FROM studmod_f('Statistics')
ORDER BY surname
SELECT *
FROM studmod_f('Databases')
ORDER BY surname

--22.02
WITH x AS
(SELECT sg.*,
ROW_NUMBER() OVER(PARTITION BY sg.module_id ORDER BY sg.exam_date, sg.student_id) sequence_num
FROM student_grades sg
INNER JOIN modules m ON sg.module_id = m.module_id)
SELECT *
FROM x

--22.03
WITH x AS
(SELECT sg.*,
ROW_NUMBER() OVER(PARTITION BY sg.student_id ORDER BY sg.exam_date) sequence_num
FROM student_grades sg
INNER JOIN modules m ON sg.module_id = m.module_id
WHERE sg.grade > 2)
SELECT *
FROM x

--22.04
WITH x AS
(SELECT s.student_id, s.surname, sg.exam_date,
ROW_NUMBER() OVER(PARTITION BY s.student_id ORDER BY sg.exam_date) sequence_num
FROM students s
INNER JOIN student_grades sg ON s.student_id = sg.student_id
WHERE sg.grade = 2)
SELECT *
FROM x

--22.05
WITH x AS
(SELECT *,
ROW_NUMBER() OVER(PARTITION BY group_no ORDER BY date_of_birth) group_num
FROM students)
SELECT *
FROM x

--22.06a
--CTE
WITH c AS 
(SELECT s.student_id, s.surname, sg.exam_date,
ROW_NUMBER() OVER(PARTITION BY s.student_id ORDER BY exam_date DESC) row_num
FROM students s
INNER JOIN student_grades sg ON s.student_id = sg.student_id)
SELECT *
FROM c
WHERE row_num = 1

--derived table
SELECT *
FROM
(SELECT s.student_id, s.surname, sg.exam_date,
ROW_NUMBER() OVER(PARTITION BY s.student_id ORDER BY exam_date DESC) row_num
FROM students s
INNER JOIN student_grades sg ON s.student_id = sg.student_id) c
WHERE row_num = 1

--22.06b
CREATE OR ALTER VIEW last_exam AS
SELECT * 
FROM
(SELECT s.student_id, s.surname, sg.exam_date,
ROW_NUMBER() OVER(PARTITION BY s.student_id ORDER BY exam_date DESC) row_num
FROM students s
INNER JOIN student_grades sg ON s.student_id = sg.student_id) c
WHERE row_num = 1

SELECT * 
FROM last_exam


--22.06c
CREATE OR ALTER VIEW last_exam AS
SELECT * 
FROM
(SELECT s.student_id, s.surname, sg.exam_date,
ROW_NUMBER() OVER(PARTITION BY s.student_id ORDER BY exam_date DESC) row_num
FROM students s
INNER JOIN student_grades sg ON s.student_id = sg.student_id) c

SELECT * 
FROM last_exam
WHERE row_num <= 3

--22.06d
CREATE OR ALTER FUNCTION last_exams(@exams tinyInt)
RETURNS TABLE AS RETURN
SELECT * 
FROM
(SELECT s.student_id, s.surname, sg.exam_date,
ROW_NUMBER() OVER(PARTITION BY s.student_id ORDER BY exam_date DESC) row_num
FROM students s
INNER JOIN student_grades sg ON s.student_id = sg.student_id) c
WHERE row_num <= @exams

SELECT *
FROM last_exams(1)
SELECT *
FROM last_exams(2)
SELECT *
FROM last_exams(4)

--22.07a
--CTE
WITH c AS
(SELECT s.*,
ROW_NUMBER() OVER(PARTITION BY s.group_no ORDER BY s.date_of_birth DESC) row_num
FROM students s
WHERE date_of_birth IS NOT NULL
AND group_no IS NOT NULL)
SELECT *
FROM c
WHERE row_num <= 2

--derived table
SELECT *
FROM
(SELECT s.*,
ROW_NUMBER() OVER(PARTITION BY s.group_no ORDER BY s.date_of_birth DESC) row_num
FROM students s) c
WHERE date_of_birth IS NOT NULL
AND group_no IS NOT NULL
AND row_num <= 2

--22.07b
CREATE OR ALTER FUNCTION youngest_students(@students tinyInt,@group Char(8))
RETURNS TABLE AS RETURN
WITH c AS
(SELECT s.*,
ROW_NUMBER() OVER(PARTITION BY s.group_no ORDER BY s.date_of_birth DESC) row_num
FROM students s
WHERE date_of_birth IS NOT NULL
AND group_no = @group)
SELECT *
FROM c
WHERE row_num <= @students

SELECT *
FROM youngest_students(4,'DMIe1011')
SELECT *
FROM youngest_students(3,'ZMIe2012')
SELECT *
FROM youngest_students(5,'DZZa3001')

--22.08a
WITH ModulesCTE AS
(
SELECT module_id, module_name, no_of_hours, 0 distance
FROM modules
WHERE module_id = 9
	UNION ALL
SELECT mo.module_id, mo.module_name, mo.no_of_hours, m.distance + 1
FROM ModulesCTE m
JOIN modules mo ON m.preceding_module = mo.module_id
)
SELECT module_id, module_name, no_of_hours, distance
FROM ModulesCTE

--22.08b
CREATE OR ALTER FUNCTION preceding_modules(@mo_id tinyInt)
RETURNS TABLE AS RETURN
WITH ModulesCTE AS
(
SELECT module_id, module_name, no_of_hours, 0 distance
FROM modules
WHERE module_id = @mo_id
	UNION ALL
SELECT mo.module_id, mo.module_name, mo.no_of_hours, m.distance + 1
FROM ModulesCTE m
JOIN modules mo ON m.preceding_module = mo.module_id
)
SELECT module_id, module_name, no_of_hours, distance
FROM ModulesCTE
